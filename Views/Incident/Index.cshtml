@model HelpDesk.ViewModel.IncidentSearchViewModel
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Core.Common;
@inject Microsoft.AspNetCore.Identity.UserManager<HelpDesk.Model.ApplicationUser> userManager

<style>
    .bd-example .pagination {
        margin-top: .5rem;
        margin-bottom: .5rem;
    }

    .justify-content-end {
        justify-content: flex-end !important;
    }

    .pagination {
        display: flex;
        padding-left: 0;
        list-style: none;
        border-radius: .25rem;
    }

        .pagination > .page-item > .page-link, .pagination > .page-item > span {
            border: 0;
            border-radius: 30px !important;
            transition: all .3s;
            padding: 0 11px;
            margin: 0 3px;
            min-width: 30px;
            height: 30px;
            line-height: 30px;
            color: #999;
            font-weight: 400;
            font-size: 18px;
            text-transform: uppercase;
            background: transparent;
            text-align: center;
        }
</style>
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header card-header-primary">
                <form asp-action="Index" role="form" class="filter filter-form">

                    <input type="hidden" id="Submitted" name="Submitted" value="@Model.Submitted" />
                    <div class="filter-segment" id="sort-filter">
                        <h4 class="card-title">Sort</h4>
                        <div class="multi_select">
                            <select asp-for="SortBy" asp-items="Model.SortByDD" class="selectpicker" aria-label="Default select example" data-live-search="false" title="Sort By" onchange="onchangeFilter()"></select>

                        </div>
                    </div>
                    <div class="filter-segment" id="sort-filter">
                        <h4 class="card-title">Project</h4>
                        <div class="multi_select">
                            <select asp-for="ProjectId" asp-items="Model.ProjectsDD" multiple class="selectpicker" aria-label="Default select example" data-live-search="false" title="Project Name" onchange="onchangeFilter()"></select>

                        </div>
                    </div>
                    <div class="filter-segment" id="sort-filter">
                        <h4 class="card-title">Status</h4>
                        <div class="multi_select">
                            <select asp-for="Status" asp-items="Model.StatusDD" multiple class="selectpicker" aria-label="Default select example" data-live-search="false" title="Status" onchange="onchangeFilter()"></select>

                        </div>
                    </div>
                    <div class="filter-segment" id="sort-filter">
                        <h4 class="card-title">Advance Filter</h4>
                        <div class="dd-container">
                            <div class="dd-select option-btn-4" style="width: 300px">
                                <a class="dd-selected d-flex justify-content-between">
                                    <label class="dd-selected-text"> <i class="fa fa-filter" aria-hidden="true" style="font-size: smaller;"></i> Advance Filter</label>
                                    <span class="fas fa-caret-right" style="color: #3C4858; padding-top: 7px;"></span>
                                </a>
                            </div>
                            <div id="filterBy" class="option-show-4">
                                <div id="reset">
                                    <div class="reset" title="Reset"></div>
                                </div>
                                <div class="more_filters content-medium" style="border-bottom: 1px solid #000;">More Filters</div>
                                <table class="filter-bottom" style="display: block;">
                                    <tbody>


                                        <tr class="datepicker1">
                                            <td>
                                                <div class="name content-extra-medium">Date</div>
                                            </td>
                                            <td>
                                                <div class="items">
                                                    <label class="date_lable content-small" for="From" style="margin-right: 1em;">From</label>

                                                    <span class="e-datewidget e-widget e-ntouch e-valid" aria-invalid="false">
                                                        <span class="e-in-wrap e-box e-padding">
                                                            <input asp-for="FormDate" type="date" class="e-datepicker e-js e-input" tabindex="0" aria-atomic="true" aria-live="assertive" placeholder="Select date" />
                                                            <span id="startdate-img" class="e-select" style="display: block;"><span class="e-icon e-calendar" aria-label="Select"></span></span>
                                                        </span>
                                                    </span>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr class="datepicker2">
                                            <td></td>
                                            <td>
                                                <div class="items">
                                                    <label class="date_lable content-small" for="To" style="margin-right:1em;">To</label>

                                                    <span class="e-datewidget e-widget e-ntouch e-valid" aria-invalid="false">
                                                        <span class="e-in-wrap e-box e-padding">
                                                            <input asp-for="ToDate" type="date" class="e-datepicker e-js e-input" tabindex="0" aria-atomic="true" aria-live="assertive" placeholder="Select date" onchange="onchangeFilter()" />
                                                            <span id="enddate-img" class="e-select" style="display: block;"><span class="e-icon e-calendar" aria-label="Select"></span></span>
                                                        </span>
                                                    </span>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr class="incidentSearch">
                                            <td>
                                                <div class="name content-extra-medium">Incident ID</div>
                                            </td>
                                            <td>
                                                <div class="items multiselect-label-list" id="IncidentList_list_width">
                                                    <div class="multi_select">
                                                        <select asp-for="IncidentNo" asp-items="Model.IncidentNoDD" multiple class="selectpicker" aria-label="Default select example" data-live-search="false" title="Incident No" onchange="onchangeFilter()"></select>

                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </form>
                <div class="filter-segment responsive-filter justify-content-end align-items-center" style="border: 1px solid #eee; border-radius: 4px;" id="sort-filter">
                    <h4 class="card-title mr-3" style="margin-bottom: 0 !important; padding: 0 !important;">INCIDENTS</h4> <i class="fa fa-filter" aria-hidden="true" style="font-size: larger;"></i>
                </div>
            </div>
            <div class="card-body">
                <div class="incident-result">

                    @foreach (var item in Model.IncidentViewModels)
                    {
                        <div class="row px-2 incidents">
                            <div class="col-lg-8">
                                <div class="content-items">
                                    <a href="#" style="color: unset;">
                                        <div class="content-header"><h5>@item.IncidentDescription</h5></div>
                                        <div class="content-text">
                                            <div class="name"><span>Project Name</span>: @item.ProjectName</div>
                                            <div class="name"> | </div>
                                            <div class="name"><span>Category</span>: @item.Categories</div>
                                            <div class="name"> | </div>
                                            <div class="name"><span>Priority</span>: @item.PriorityLevel</div>
                                        </div>
                                        <div class="content-creator">
                                            @{
                                                var userId = item.IncidentProgress.FirstOrDefault(u => u.IncidentStatusLUId == 1)?.FromUserId;
                                                var createdBy = (await userManager.FindByIdAsync(userId))?.Name;
                                                var createdDate = item.IncidentProgress.FirstOrDefault(u => u.IncidentStatusLUId == 1).ReplyDate;
                                                var repliedByUserId = item.IncidentProgress.OrderByDescending(u => u.ReplyDate).FirstOrDefault()?.FromUserId;
                                                var LatestRepliedBy = (await userManager.FindByIdAsync(userId))?.Name;
                                                var LatestRepliedByDate = item.IncidentProgress.OrderByDescending(u => u.ReplyDate).FirstOrDefault()?.ReplyDate;
                                            }
                                            <div><span class="inner-grid-list">Created by</span>: @createdBy on  <b>@createdDate.ToString("MM/dd/yyyy hh:mm tt")</b></div>


                                            @if (String.IsNullOrEmpty(LatestRepliedBy))
                                            {
                                                @string.Empty
                                            }
                                            else
                                            {
                                                <div><span class="inner-grid-list">Last replied by</span>: @LatestRepliedBy on  <b>@LatestRepliedByDate.Value.ToString("MM/dd/yyyy hh:mm tt")</b></div>
                                            }
                                        </div>
                                    </a>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="content-info">
                                    <p style="font-size: 1.0rem; font-weight: 300; margin-bottom: 0 !important;">@item.IncidentNo</p>
                                    @if (item.IncidentStatus == "OPEN")
                                    {
                                        <h2 class="open-incidents">@item.IncidentStatus</h2> }
                                    else
                                    {
                                        <h2 class="close-incidents">@item.IncidentStatus</h2>}

                                    <a href="#" style="font-size: 14px;color: #0555cd;">View Recent Activity</a>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
            <div class="bd-example" data-example-id="">
                <nav aria-label="Page navigation example">
                    @{
                        var pagedListRenderOptions = new PagedListRenderOptions
                        {

                            LinkToFirstPageFormat = "1",
                            LinkToPreviousPageFormat = "Previous",
                            LinkToNextPageFormat = "Next",
                            MaximumPageNumbersToDisplay = 2,
                            UlElementClasses = new string[] { "pagination justify-content-end" },
                            LiElementClasses = new string[] { "page-item" },
                            PageClasses = new string[] { "page-link" }
                        };
                    }
                    @Html.PagedListPager(Model.IncidentViewModels, page => Url.Action("Index", new { Page = page, SortBy = Model.SortBy, ProjectId = Model.ProjectId, IncidentNo = Model.IncidentNo, Status = Model.Status, FromDate = Model.FormDate, ToDate = Model.ToDate }), pagedListRenderOptions)
                    @*<ul class="pagination justify-content-end">
                            <li class="page-item">
                                <a class="page-link" href="javascript:;" tabindex="-1">Previous</a>
                            </li>
                            <li class="page-item"><a class="page-link" href="javascript:;">1</a></li>
                            <li class="page-item"><a class="page-link" href="javascript:;">2</a></li>
                            <li class="page-item"><a class="page-link" href="javascript:;">3</a></li>
                            <li class="page-item">
                                <a class="page-link" href="javascript:;">Next</a>
                            </li>
                        </ul>*@
                </nav>
            </div>
        </div>
    </div>
</div>
<script>
    function onchangeFilter() {
        $(".filter-form").submit();


    }


</script>